[{"/home/galaxy111/mytrip/src/index.js":"1","/home/galaxy111/mytrip/src/App.js":"2","/home/galaxy111/mytrip/src/reportWebVitals.js":"3","/home/galaxy111/mytrip/src/ItinerarySection.js":"4","/home/galaxy111/mytrip/src/usePersistentState.js":"5"},{"size":535,"mtime":1690733244135,"results":"6","hashOfConfig":"7"},{"size":3683,"mtime":1691058797528,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1690733244135,"results":"9","hashOfConfig":"7"},{"size":1030,"mtime":1690979600489,"results":"10","hashOfConfig":"7"},{"size":539,"mtime":1690734265915,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o6zr9",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/galaxy111/mytrip/src/index.js",[],[],"/home/galaxy111/mytrip/src/App.js",["28","29","30","31","32","33","34","35","36","37","38","39","40"],[],"import React, { useEffect } from \"react\";\nimport ItinerarySection from \"./ItinerarySection\";\nimport \"./style.css\";\nimport usePersistentState from \"./usePersistentState\";\n\nconst App = () => {\n  const [itinerary, setItinerary] = usePersistentState(\"itinerary\", []);\n\n  const handleAddSection = () => {\n    const newSection = {\n      id: Date.now(), // Unique identifier for each section\n      date: \"\", // Replace with your custom date format logic\n      background: \"\",\n      content: \"\"\n    };\n    setItinerary((prevItinerary) => [...prevItinerary, newSection]);\n  };\n\n  const handleSectionUpdate = (id, updates) => {\n    setItinerary((prevItinerary) =>\n      prevItinerary.map((section) =>\n        section.id === id ? { ...section, ...updates } : section\n      )\n    );\n  };\n\n  const handleSectionDelete = (id) => {\n    setItinerary((prevItinerary) =>\n      prevItinerary.filter((section) => section.id !== id)\n    );\n  };\n\n  const setBackground = (tag, textcolor) => {\n    document.body.style.background = `url('websitefiles/${tag}.png')`;\n    document.body.style.backgroundSize = \"cover\";\n    document.body.style.width = \"100vw\";\n    document.body.style.height = \"100vh\";\n    document.getElementsByTagName('H1')[0].style.color = textcolor;\n  };\n\n  function setDefaultBackground() {\n    document.body.style.background = `url('websitefiles/generic.png')`;\n    document.body.style.backgroundSize = \"cover\";\n    document.body.style.width = \"100vw\";\n    document.body.style.height = \"100vh\";\n    document.getElementsByTagName('H1')[0].style.color = 'lightyellow';\n  };\n\n  useEffect(() => {\n    let ignore = false;\n    \n    if (!ignore) setDefaultBackground()\n    return () => { ignore = true; }\n    },[]);\n    \n  return (\n    <div className=\"app\">\n      <div class=\"dropdown\" tabindex=\"1\">\n        <i class=\"db2\" tabindex=\"1\"></i>\n        <a class=\"dropbtn\">Page Theme</a>\n        <div class=\"dropdown-content\">\n          <a href=\"#\" onClick={() => setBackground(\"generic\", \"lightyellow\")}>\n            Generic\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"busystreet\", \"white\")}>\n            Busy Street\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"cablecar\", \"lightyellow\")}>\n            Ski Season\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"cherrysunset\", \"white\")}>\n            Cherry Sunset\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"galaxy\", \"lightcyan\")}>\n            Galaxy\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"japanpark\", \"lightyellow\")}>\n            Osaka Park\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"junctiondark\", \"white\")}>\n            Hong Kong Junction\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"mountains\", \"lightcyan\")}>\n            Mountain Sunrise\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"nightcity\", \"lightyellow\")}>\n            Late Night City\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"parisrain\", \"lightgreen\")}>\n            Paris Rain\n          </a>\n          <a href=\"#\" onClick={() => setBackground(\"tokyostreet\", \"slateblue\")}>\n            Tokyo Commute\n          </a>\n        </div>\n      </div>\n      <a className=\"sectionbtn\" onClick={handleAddSection}>Add Section</a>\n      <h1>My Trip Itinerary</h1>\n      <div className=\"section-container\">\n        {itinerary.map((section) => (\n          <ItinerarySection\n            key={section.id}\n            section={section}\n            onUpdate={handleSectionUpdate}\n            onDelete={handleSectionDelete}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","/home/galaxy111/mytrip/src/reportWebVitals.js",[],[],"/home/galaxy111/mytrip/src/ItinerarySection.js",[],[],"/home/galaxy111/mytrip/src/usePersistentState.js",[],[],{"ruleId":"41","severity":1,"message":"42","line":60,"column":9,"nodeType":"43","endLine":60,"endColumn":28},{"ruleId":"41","severity":1,"message":"44","line":62,"column":11,"nodeType":"43","endLine":62,"endColumn":79},{"ruleId":"41","severity":1,"message":"44","line":65,"column":11,"nodeType":"43","endLine":65,"endColumn":76},{"ruleId":"41","severity":1,"message":"44","line":68,"column":11,"nodeType":"43","endLine":68,"endColumn":80},{"ruleId":"41","severity":1,"message":"44","line":71,"column":11,"nodeType":"43","endLine":71,"endColumn":78},{"ruleId":"41","severity":1,"message":"44","line":74,"column":11,"nodeType":"43","endLine":74,"endColumn":76},{"ruleId":"41","severity":1,"message":"44","line":77,"column":11,"nodeType":"43","endLine":77,"endColumn":81},{"ruleId":"41","severity":1,"message":"44","line":80,"column":11,"nodeType":"43","endLine":80,"endColumn":78},{"ruleId":"41","severity":1,"message":"44","line":83,"column":11,"nodeType":"43","endLine":83,"endColumn":79},{"ruleId":"41","severity":1,"message":"44","line":86,"column":11,"nodeType":"43","endLine":86,"endColumn":81},{"ruleId":"41","severity":1,"message":"44","line":89,"column":11,"nodeType":"43","endLine":89,"endColumn":80},{"ruleId":"41","severity":1,"message":"44","line":92,"column":11,"nodeType":"43","endLine":92,"endColumn":81},{"ruleId":"41","severity":1,"message":"42","line":97,"column":7,"nodeType":"43","endLine":97,"endColumn":60},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md"]